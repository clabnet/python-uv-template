name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"

      - name: Check formatting with ruff
        run: |
          uv run ruff format --check .

      - name: Lint with ruff
        run: |
          uv run ruff check .

      - name: Type check with mypy
        run: |
          uv run mypy .

      - name: Security check with bandit
        run: |
          uv run bandit -r src/ --exclude src/test_*.py

      - name: Run tests with pytest
        run: |
          uv run pytest --cov=src --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
